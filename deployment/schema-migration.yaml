steps:
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'setup-get-parameters-base64'
  script: |
    # save for next steps
    mkdir -p /workspace/env
    echo $(gcloud parametermanager parameters versions render $_ENVIRONMENT --parameter=$_PROJECT_NAME --location=global --format=json) \
      > /workspace/env/parameters-base64.json
  automapSubstitutions: true

- name: 'jetbrainsinfra/jq'
  id: 'setup-extract-parameters'
  script: |
    echo $(jq '.payload.data | @base64d | fromjson' /workspace/env/parameters-base64.json) \
      > /workspace/env/parameters.json
    echo $(cat /workspace/env/parameters.json)

    # Write Liquibase env vars to bash profile
    echo "export LIQUIBASE_COMMAND_URL=$(jq -r '.host' /workspace/env/parameters.json)" > /workspace/env/liquibase_env.sh
    echo "export LIQUIBASE_COMMAND_DEFAULT_SCHEMA_NAME=$(jq -r '.defaultSchema' /workspace/env/parameters.json)" >> /workspace/env/liquibase_env.sh
    echo "export LIQUIBASE_COMMAND_USERNAME=$(jq -r '.liquibaseUsername' /workspace/env/parameters.json)" >> /workspace/env/liquibase_env.sh
    echo "export LIQUIBASE_COMMAND_PASSWORD=$(jq -r '.liquibasePassword' /workspace/env/parameters.json)" >> /workspace/env/liquibase_env.sh
    echo "export LIQUIBASE_LIQUIBASE_SCHEMA_NAME=$(jq -r '.liquibaseSchema' /workspace/env/parameters.json)" >> /workspace/env/liquibase_env.sh
    

- name: 'liquibase/liquibase:5.0'
  id: 'run-schema-migration'
  script: |
    cd /workspace/code
    # Export Liquibase environment variables
    set -a
    . /workspace/env/liquibase_env.sh
    set +a

    # Execute sync script
    liquibase --version
    lpm add mysql
    echo $(tree .)
    echo $(lpm list)
    liquibase --changeLogFile=src/main/changelogs/00-changelog-root.yaml status

substitutions:
  _PROJECT_NAME: sandbox-database # default value
  _ENVIRONMENT: dev # default value
options:
  logging: CLOUD_LOGGING_ONLY